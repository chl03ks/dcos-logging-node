0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.3
3 info using node@v6.7.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/dan/development/dcos-logging-node',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/dan/.npm/dcos-logging-node/1.1.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/dan/.npm correctMkdir not in flight; initializing
10 info lifecycle dcos-logging-node@1.1.0~prepublish: dcos-logging-node@1.1.0
11 silly lifecycle dcos-logging-node@1.1.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/dan/.npm/dcos-logging-node/1.1.0/package.tgz',
12 verbose tar pack   '/Users/dan/development/dcos-logging-node' ]
13 verbose tarball /Users/dan/.npm/dcos-logging-node/1.1.0/package.tgz
14 verbose folder /Users/dan/development/dcos-logging-node
15 verbose addLocalTarball adding from inside cache /Users/dan/.npm/dcos-logging-node/1.1.0/package.tgz
16 verbose correctMkdir /Users/dan/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd dcos-logging-node@1.1.0
18 verbose afterAdd /Users/dan/.npm/dcos-logging-node/1.1.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/dan/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/dan/.npm/dcos-logging-node/1.1.0/package/package.json written
21 silly publish { name: 'dcos-logging-node',
21 silly publish   version: '1.1.0',
21 silly publish   description: 'Node.js client library lightweigth for DCOS Logging API. ES6',
21 silly publish   main: 'index.js',
21 silly publish   scripts: { test: 'test' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/owndann/dcos-logging-node.git' },
21 silly publish   keywords:
21 silly publish    [ 'node.js',
21 silly publish      'dcos',
21 silly publish      'logging',
21 silly publish      'marathon',
21 silly publish      'javascript',
21 silly publish      'library' ],
21 silly publish   author: '',
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/owndann/dcos-logging-node/issues' },
21 silly publish   homepage: 'https://github.com/owndann/dcos-logging-node#readme',
21 silly publish   dependencies: { request: '^2.81.0', 'request-promise': '^4.2.0' },
21 silly publish   readme: '# DCOS Logging API Node.js Client Library\n\nNode.js client library lightweigth for DCOS Logging API. ES6\n\nInstall\n\nInstall using npm or yarn\n\n```\n$ npm install dcos-logging-node\n$ yarn add dcos-logging-node\n```\n\n# Usage\n\n```javascript\n\nconst dcosLogging = require(\'../lib/index\')(\n    {\n        dcosHost: \'DCOS_HOST\',\n        dcosProtocol: \'https\'\n    },{\n        headers: {\n            \'Authorization\': \'token=DCOS_ACCESS_TOKEN\'\n            /*\n             You can get the access Token in the DCOS cli Using\n             $ dcos config show core.dcos_acs_token\n             */\n        }\n    });\n\ndcosLogging.range.get(null, \'text/plain\', false, {skip_prev: 200, limit: 3})\n    .then(logs => console.log(logs))\n    .catch(err => console.error(err));\n```\n\n## Format\n\n\nIn the methods you will neet to discribe the Accept Header.\nThe API request header can be any the following:\n\n- `text/plain`, `text/html`, `*/*` request logs in text format, ending with `\\n`.\n- `application/json` request logs in JSON format.\n- `text/event-stream` request logs in Server-Sent-Events format.\n\n# Stream\n\nYou can get a readble Stream object from any end point in the Logging API\n\n```javascript\n\ndcosLogging.range.get(null, \'text/event-stream\', true)\n    .then((stream) => {\n        // Forces the stream to receive a String instead of a Buffer object\n        stream.setEncoding(\'utf-8\');\n        // Event that receives data from DCOS\n        stream.on(\'data\', (chunk) => {\n            // Printing the chunk received from the stream\n            console.log(chunk);\n        });\n\n        // Last chunk, it runs when the connection is closed\n        stream.on(\'end\', () => {\n            // Here you do what you need when it ends...\n        });\n\n        // If for some reason we receive an error while connected, we can handle it here\n        stream.on(\'errror\', (err) => {\n            // Error handling...\n        })\n    }).catch((err) => console.log(err));\n\n```\n\n## Methods\n\n> Note: If the AcceptHeader is `text/event-stream` you will need to set the `RequestStream` param to false\n\n### Range\n\n\n- `get(agentId, acceptHeader, requestStream, parameters)`\n- `download(agentId, acceptHeader, requestStream, parameters)`\n- `framework(agentId,frameworkId, executorId, containerId, acceptHeader, requestStream, parameters)`\n- `frameworkDownload(agentId, frameworkId, executorId, containerId, acceptHeader, requestStream , parameters)`\n\n### Stream\n\n-  `get(agentId, AcceptHeader, requestStream, parameters)`\n-  `framework(agentId, frameworkId, executorId, containerId, acceptHeader, requestStream)`\n\n### Fields\n\n- `get(agentId, field, acceptHeader, requestStream, parameters)`',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'f7de069f82a0c56a0dbd6010575a8181ab5bd271',
21 silly publish   _id: 'dcos-logging-node@1.1.0',
21 silly publish   _shasum: 'be1674bdeaa24d5ae431cc853ce45b9f3789978d',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name dcos-logging-node
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'dcos-logging-node',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'dcos-logging-node',
26 silly mapToRegistry   name: 'dcos-logging-node',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/dcos-logging-node
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/dan/.npm/dcos-logging-node/1.1.0/package.tgz
30 verbose request uri https://registry.npmjs.org/dcos-logging-node
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 12:58:42 PM
33 verbose request using bearer token for auth
34 verbose request id d317526eda30b8ec
35 http request PUT https://registry.npmjs.org/dcos-logging-node
36 http 403 https://registry.npmjs.org/dcos-logging-node
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Mon, 17 Apr 2017 17:58:44 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-dfw1831-DFW',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1492451923.402463,VS0,VE810',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/dan/.npm/registry.npmjs.org/dcos-logging-node on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.1.0." : dcos-logging-node
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid dcos-logging-node
43 verbose cwd /Users/dan/development/dcos-logging-node
44 error Darwin 16.5.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.7.0
47 error npm  v3.10.3
48 error code E403
49 error "You cannot publish over the previously published version 1.1.0." : dcos-logging-node
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
